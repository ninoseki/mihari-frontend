info:
  title: Mihari API
  version: "1.0"

openapi: 3.0.0

paths:
  /api/alerts:
    get:
      summary: Get alerts
      tags:
        - alerts
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          required: false
        - in: query
          name: artifact
          schema:
            type: string
          required: false
        - in: query
          name: description
          schema:
            type: string
          required: false
        - in: query
          name: source
          schema:
            type: string
          required: false
        - in: query
          name: tag
          schema:
            type: string
          required: false
        - in: query
          name: title
          schema:
            type: string
          required: false
        - in: query
          name: toAt
          schema:
            type: string
          required: false
        - in: query
          name: fromAt
          schema:
            type: string
          required: false
        - in: query
          name: asn
          schema:
            type: integer
          required: false
        - in: query
          name: dnsRecord
          schema:
            type: string
          required: false
        - in: query
          name: reverseDnsName
          schema:
            type: string
          required: false
      responses:
        "200":
          description: A list of matched alerts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertSearchResults"
  /api/alerts/{id}:
    delete:
      summary: Delete an alert
      tags:
        - alerts
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "204":
          description: An alert is deleted
  /api/tags/:
    get:
      summary: Get tags
      tags:
        - tags
      responses:
        "200":
          description: A list of tags
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tags"
  /api/tags/{name}:
    delete:
      summary: Delete a tag
      tags:
        - tags
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
      responses:
        "204":
          description: A tag is deleted
  /api/sources:
    get:
      summary: Get sources
      tags:
        - sources
      responses:
        "200":
          description: A list of sources
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sources"
  /api/artifacts/{id}:
    get:
      summary: Get an artifact
      tags:
        - artifacts
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: An artifact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtifactWithRelations"
    delete:
      summary: Delete an artifact
      tags:
        - artifacts
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "204":
          description: An artifact is deleted
  /api/artifacts/{id}/enrich:
    get:
      summary: Enrich an artifact
      tags:
        - artifacts
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "201":
          description: An artifact is enriched
  /api/config:
    get:
      summary: Get a config
      tags:
        - config
      responses:
        "200":
          description: A dictionary of configuration items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Config"
  /api/command:
    post:
      summary: Run a command
      tags:
        - command
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommandRequest"
      responses:
        "200":
          description: A result of a command
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommandResult"
  /api/analyzer:
    post:
      summary: Run an analyzer
      tags:
        - analyzers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalyzerRequest"
      responses:
        "201":
          description: OK
  /api/ip_addresses/{ip}:
    get:
      summary: Get an IP address information
      tags:
        - ip addresses
      parameters:
        - in: path
          name: ip
          schema:
            type: string
          required: true
      responses:
        "200":
          description: An IP address information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IPInfo"
components:
  schemas:
    Tag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Tags:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Tag"
    Sources:
      type: array
      items:
        allOf:
          - type: string
    DnsRecord:
      type: object
      properties:
        resource:
          type: string
        value:
          type: string
    WhoisRecord:
      type: object
      properties:
        domain:
          type: string
        createdOn:
          type: string
          nullable: true
        updatedOn:
          type: string
          nullable: true
        expiresOn:
          type: string
          nullable: true
        registrar:
          type: object
          nullable: true
        contacts:
          type: array
          items:
            type: object
    Geolocation:
      type: object
      properties:
        country:
          type: string
        countryCode:
          type: string
          nullable: true
    AutonomousSystem:
      type: object
      properties:
        asn:
          type: integer
    Artifact:
      type: object
      properties:
        id:
          type: integer
        data:
          type: string
        dataType:
          type: string
        source:
          type: string
          nullable: true
    ArtifactWithRelations:
      allOf:
        - $ref: "#/components/schemas/Artifact"
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
            reverseDnsNames:
              type: array
              items:
                type: string
              nullable: true
            autonomousSystem:
              $ref: "#/components/schemas/AutonomousSystem"
              nullable: true
            geolocation:
              $ref: "#/components/schemas/Geolocation"
              nullable: true
            whoisRecord:
              $ref: "#/components/schemas/WhoisRecord"
              nullable: true
            dnsRecords:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/DnsRecord"
              nullable: true
    Alert:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        source:
          type: string
        createdAt:
          type: string
        tags:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Tag"
        artifacts:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Artifact"
    AlertSearchResults:
      type: object
      properties:
        alerts:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Alert"
        currentPage:
          type: integer
        pageSize:
          type: integer
        total:
          type: integer
    ConfigItemValue:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ConfigItem:
      type: object
      properties:
        isConfigured:
          type: boolean
        type:
          type: string
        values:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/ConfigItemValue"
    Config:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ConfigItem"
    CommandRequest:
      type: object
      properties:
        command:
          type: string
    CommandResult:
      type: object
      properties:
        output:
          type: string
        success:
          type: boolean
    AnalyzerRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        source:
          type: string
        artifacts:
          type: string
        tags:
          type: array
          items:
            type: string
        ignoreOldArtifacts:
          type: boolean
          default: false
        ignoreThreshold:
          type: integer
          default: 0
      required:
        - title
        - description
        - source
        - artifacts
    IPInfo:
      type: object
      properties:
        ip:
          type: string
        country:
          type: string
        city:
          type: string
        postal:
          type: string
        region:
          type: string
        timezone:
          type: string
        hostname:
          type: string
        loc:
          type: string
        org:
          type: string
